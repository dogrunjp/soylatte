!!! XML
!!!
%html
  %head
    %title= @report[:summary][:study_title]
    %meta{:charset => "utf-8", :content => "text/html", "http-equiv" => "content"}
    %link{:rel => :stylesheet, :href => "/css/bootstrap.min.css", :type => "text/css"}
    %link{:rel => :stylesheet, :href => "/css/font-awesome.min.css", :type => "text/css"}
    %link{:rel => :stylesheet, :href => "/css/theme.bootstrap.css" }
    %link{:rel => :stylesheet, :href => "/style.css", :type => "text/css"}
    
    %script{ :src => "http://code.jquery.com/jquery-1.8.2.min.js" }
    %script{ :src => "/js/bootstrap.min.js" }
    %script{ :src => "/js/jquery.tablesorter.min.js" }
    %script{ :src => "/js/jquery.tablesorter.widgets.min.js" }
    :javascript
      $(document).ready(function(){
        $.extend($.tablesorter.themes.bootstrap, {
          table: 'table table-hover',
          header: 'bootstrap-header',
          footerRow: '',
          footerCells: '',
          icons: '',
          sortNone: 'bootstrap-icon-unsorted',
          sortAsc: 'icon-chevron-up',
          sortDesc: 'icon-chevron-down',
          active: '',
          hover: '',
          filterRow: '',
          even: '',
          odd: ''
        });
        $("#runList").tablesorter({
          theme: "bootstrap",
          widthFixed: true,
          headerTemplate: '{content} {icon}',
          widgets: ["uitheme", "filter", "zebra"],
          widgetOptions: {
            zebra : ["even", "odd"],
            filter_reset: ".reset",
          }
        })
        $("#sampleList").tablesorter({
          theme: "bootstrap",
          widthFixed: true,
          headerTemplate: '{content} {icon}',
          widgets: ["uitheme", "filter", "zebra"],
          widgetOptions: {
            zebra : ["even", "odd"],
            filter_reset: ".reset",
          }
        })
      });
    
    
  %body
    .container
      .navbar.navbar-fixed-top
        .navbar-inner
          .container
            %a.btn.btn-navbar{ "data-toggle" => "collapse", "data-target" => ".nav-collapse"}
              %span.icon-bar
              %span.icon-bar
              %span.icon-bar
            %a.brand
              DBCLS SRA metadata search (beta)
            .nav-collapse
              %ul.nav
                %li
                  %a{:href => "/soylatte"} Home
                %li
                  %a{:href => "http://g86.dbcls.jp/chateautogo" } Blog
                %li
                  %a{:href => "http://github.com/inutano/sra_metadata_toolkit", "data-toggle" => "tooltip", "title" => "github repo"}
                    %i.icon-github
                %li
                  %a{:href => "http://twitter.com/inutano", "data-toggle" => "tooltip", "title" => "Twitter" }
                    %i.icon-twitter
                :javascript
                  $("a").tooltip({
                    'selector': '',
                    'placement': 'bottom'
                  });
      
      %section
        %h2
          %i.icon-pencil.icon-large
          Project Summary
        %hr
        
        %p.lead= @report[:summary][:study_title]
        %table.table.table-hover
          %thead
            %tr
              %th Study Type
              %th Sample Organism
              %th Sequencing Platform
          %tbody
            %tr
              %td= @report[:summary][:type]
              %td= @report[:summary][:species].join(", ")
              %td= @report[:summary][:instrument].join(", ")
            
      - if @report[:paper]
        - @report[:paper].each do |paper|
          %section
            %h2 
              %i.icon-file.icon-large
              Article Summary
            %hr
            
            %h3= paper[:title]
  
            %blockquote
              %small= paper[:authors].join(", ")
              %small= paper[:journal] + ", " + paper[:date]
              %p= paper[:abstract]
            
            .paper_linkout
              %span.paper_linkout
                - pm_base = "http://www.ncbi.nlm.nih.gov/pubmed/"
                - pmc_base = "http://www.ncbi.nlm.nih.gov/pmc/articles/"
                %a.btn{ :href => pm_base + paper[:pubmed_id] }
                  %i.icon-file
                  PubMed
                - if paper[:pmc]
                  %a.btn{ :href => pmc_base + paper[:pmc][:pmc_id] }
                    %i.icon-book
                    PMC
                        
            - if paper[:pmc]
              - pmc = paper[:pmc]
              %section
              - if !pmc[:methods].empty?
                %h3 Methods
                .accordion#accordion2
                  - pmc[:methods].each do |section_methods|
                    - if section_methods.has_key?(:subsec)
                      - section_methods[:subsec].each do |subsec|
                      - nospace = subsec[:subsec_title].gsub("\s","_")
                        .accordion-group
                          .accordion-heading
                            %a.accordion-toggle{ "data-toggle" => "collapse", "data-parent" => "#accordion2", :href => nospace.sub(/^/,"\#") }
                              = subsec[:subsec_title]
                          .accordion-body.collapse{ :id => nospace }
                            .accordion-inner
                              %blockquote
                                %p= subsec[:subsec_text].join("\n")
                    - else
                      - nospace = section_methods[:sec_title].gsub("\s","_")
                      .accordion-group
                        .accordion-heading
                          %a.accordion-toggle{ "data-toggle" => "collapse", "data-parent" => "#accordion2", :href => nospace.sub(/^/,"\#") }
                            = section_methods[:sec_title]
                        .accordion-body.collapse{ :id => nospace }
                          .accordion-inner
                            %blockquote
                              %p= section_methods[:sec_text].join("\n")
  
              - if !pmc[:results].empty?
                %h3 Results
                .accordion#accordion3
                  - pmc[:results].each do |section_results|
                    - if section_results.has_key?(:subsec)
                      - section_results[:subsec].each do |subsec|
                      - nospace = subsec[:subsec_title].gsub("\s","_")
                        .accordion-group
                          .accordion-heading
                            %a.accordion-toggle{ "data-toggle" => "collapse", "data-parent" => "#accordion3", :href => nospace.sub(/^/,"\#") }
                              = subsec[:subsec_title]
                          .accordion-body.collapse{ :id => nospace }
                            .accordion-inner
                              %blockquote
                                %p= subsec[:subsec_text].join("\n")
                    - else
                      - nospace = section_results[:sec_title].gsub("\s","_")
                      .accordion-group
                        .accordion-heading
                          %a.accordion-toggle{ "data-toggle" => "collapse", "data-parent" => "#accordion2", :href => nospace.sub(/^/,"\#") }
                            = section_results[:sec_title]
                        .accordion-body.collapse{ :id => nospace }
                          .accordion-inner
                            %blockquote
                              %p= section_results[:sec_text].join("\n")
                              
                %h3 Cited by
                - num_cb = pmc[:cited_by].size
                - publication_s = num_cb == 1 ? " publication cites" : " publications cite"
                %h4= num_cb.to_s + publication_s + " this article"
                %ol
                - pmc[:cited_by].each do |citedby|
                  %li
                    %a{ :href => "http://www.ncbi.nlm.nih.gov/pmc/articles/#{citedby[:pmcid]}" }= citedby[:title]
            
      %section
        %h2 
          %i.icon-reorder.icon-large
          Sequencing Profile
        %hr

        .data_retrieve
          %span.data_retrieve
            %a.btn{ :href => "/data/#{@report[:summary][:study_id]}?dtype=run&retmode=tsv" }
              %i.icon-file
                TSV
            %a.btn{ :href => "/data/#{@report[:summary][:study_id]}?dtype=run&retmode=json" }
              %i.icon-file
                JSON
        
        - num_runs = @report[:run_table].size
        - sequencing_s = num_runs == 1 ? " of Sequencing" : " of Sequencings"
        %h4= num_runs.to_s + sequencing_s + " (Based on Run ID)"
        %table.table.table-hover.tablesorter#runList
          %thead
            %tr
              %th Run ID
              %th Sample ID
              %th Study Type
              %th Sample Organism
              %th Sequencing Instrument
              %th Library Layout
              %th Total Number of Sequence
              %th Sequence Length
              %th Download
          
          %tbody            
            - @report[:run_table].each do |row|
              - subid = row[:submission_id]
              - expid = row[:experiment_id]
              - runid = row[:run_id]
              - ddbj_base = "ftp://ftp.ddbj.nig.ac.jp/ddbj_database/dra"
              - ebi_base = "ftp://ftp.sra.ebi.ac.uk/vol1/fastq"
              - ncbi_base = "ftp://ftp-trace.ncbi.nlm.nih.gov/sra/sra-instant/reads/ByRun/sra"
              - if !row[:read_profile]
                %tr
                  %td
                    %a{ :href => "/view/#{runid}" }= runid
                  %td
                    - row[:sample_id].each do |id|
                      %a{ :href => "##{id}" }= id
                  %td= row[:study_type]
                  %td= row[:species].join(", ")
                  %td= row[:instrument]
                  %td
                    - if row[:lib_layout] == "PAIRED"
                      - orient = "library orientation: #{row[:lib_orientation]}"
                      - nlength = "nominal length: #{row[:lib_nominal_length]}"
                      - nsdev = "nominal sdev: #{row[:lib_nominal_sdev]}"
                      - content = [orient, nlength, nsdev].join(", ")
                      %a.button{ "data-toggle" => "popover", "data-original-title" => "Library Info", "data-content" => content }
                        = row[:lib_layout]
                    - else
                      = row[:lib_layout]
                  %td no data
                  %td no data
                  %td
                    .dropdown
                      %a.dropdown-toggle{ :href => "#", "data-toggle" => "dropdown" } FTP
                      %ul.dropdown-menu{ "role" => "menu", "aria-lebbledby" => "dLabel" }
                        %li
                          %a{ :href => "#{File.join(ddbj_base, "fastq", subid.slice(0..5), subid, expid)}" } DDBJ/FASTQ
                        %li
                          %a{ :href => "#{File.join(ddbj_base, "sralite/ByExp/litesra", expid.slice(0..2), expid.slice(0..5), expid)}" } DDBJ/SRALite
                        %li
                          %a{ :href => "#{File.join(ebi_base, runid.slice(0..5), runid)}" } ENA/FASTQ
                        %li
                          %a{ :href => "#{File.join(ncbi_base, runid.slice(0..2), runid.slice(0..5), runid)}" } NCBI/SRALite
                
              - else
                - row[:read_profile].each do |read|
                  %tr
                    %td
                      %a{ :href => "/view/#{read[:read_id]}" }= read[:read_id]
                    %td
                      - row[:sample_id].each do |id|
                        %a{ :href => "##{id}" }= id
                    %td= row[:study_type]
                    %td= row[:species].join(", ")
                    %td= row[:instrument]
                    %td
                      - if row[:lib_layout] == "PAIRED"
                        - orient = "library orientation: #{row[:lib_orientation]}"
                        - nlength = "nominal length: #{row[:lib_nominal_length]}"
                        - nsdev = "nominal sdev: #{row[:lib_nominal_sdev]}"
                        - content = [orient, nlength, nsdev].join(", ")
                        %a.library{ "data-toggle" => "popover", "data-original-title" => "Library Info", "data-content" => content }
                          = row[:lib_layout]
                      - else
                        = row[:lib_layout]
                    %td= read[:total_seq]
                    %td= read[:seq_length]
                    %td
                      .dropdown
                        %a.dropdown-toggle{ :href => "#", "data-toggle" => "dropdown" } FTP
                        %ul.dropdown-menu{ "role" => "menu", "aria-lebbledby" => "dLabel" }
                          %li
                            %a{ :href => "#{File.join(ddbj_base, "fastq", subid.slice(0..5), subid, expid)}" } DDBJ/FASTQ
                          %li
                            %a{ :href => "#{File.join(ddbj_base, "sralite/ByExp/litesra", expid.slice(0..2), expid.slice(0..5), expid)}" } DDBJ/SRALite
                          %li
                            %a{ :href => "#{File.join(ebi_base, runid.slice(0..5), runid)}" } ENA/FASTQ
                          %li
                            %a{ :href => "#{File.join(ncbi_base, runid.slice(0..2), runid.slice(0..5), runid)}" } NCBI/SRALite
          :javascript
            $("a.library").popover({
              'selector': '',
              'placement': 'right'
            });
                    
                            
      %section
        %h2 
          %i.icon-beaker.icon-large.icon-spin
          Sample Profile
        %hr

        .data_retrieve
          %span.data_retrieve
            %a.btn{ :href => "/data/#{@report[:summary][:study_id]}?dtype=sample&retmode=tsv" }
              %i.icon-file
                TSV
            %a.btn{ :href => "/data/#{@report[:summary][:study_id]}?dtype=sample&retmode=json" }
              %i.icon-file
                JSON
        
        - num_samples = @report[:sample_table].size
        - sample_s = num_samples == 1 ? " Sample" : "Samples"
        %h4= num_samples.to_s + sample_s
        %table.table.table-hover.tablesorter#sampleList
          %thead
            %tr
              %th Sample ID
              %th Sample Title
              %th Sample Description
              %th Run ID
          
          %tbody
            - sample_table = @report[:sample_table]
            
            // # highlight uniq words in sample description
            - description_array = sample_table.map{|n| n[:sample_description] }.compact
            - min_sentences = description_array.map{|n| n.split("\s") }.uniq
            - bag_of_words = min_sentences.size == 1 ? [] : min_sentences.flatten
            - uniq_words = bag_of_words.group_by{|i| i }.select{|k,v| v.size == 1 }.keys
            
            - sample_table.each do |row|
              - desc = row[:sample_description]
              %tr{ :id => row[:sample_id] }
                %td= row[:sample_id]
                %td= row[:sample_title]
                - if desc
                  %td
                    - desc.split("\s").map do |w|
                      - if uniq_words.include?(w)
                        %span.highlight= w
                      - else
                        = w
                - else
                  %td= desc
                %td= row[:run_id_list].join(", ")
  
      %section
        %h2
          %i.icon-share.icon-large
          Linkout/Resources
        %hr
  
        %ul
          - studyid = @report[:summary][:study_id]
          %li
            %a{ :href => "http://trace.ddbj.nig.ac.jp/DRASearch/study?acc=" + studyid }
              DRASearch - DDBJ/DRA
          %li
            %a{ :href => "http://www.ebi.ac.uk/ena/data/view/" + studyid }
              ENA Browser - EBI/ENA
      
      %footer
        powered by
        %a{ :href => "http://dbcls.rois.ac.jp/en" }
          DBCLS
        , project licensed under CC-BY 2.1 JP. /
        Font Awesome by Dave Gandy - 
        %a{ :href => "http://fortawesome.github.com/Font-Awesome" }
          http://fortawesome.github.com/Font-Awesome
  
